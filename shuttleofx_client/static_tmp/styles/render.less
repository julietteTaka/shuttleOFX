/*----------------------------------------------------------------
    Render
----------------------------------------------------------------*/

#downloadModal{
	z-index: 100000!important;
	margin-top: 15%;
}

.modal-backdrop {
  z-index: 10000;
}

.modal-title{
	color: @ofxColor;
	font-size: 150%;
	font-family: 'Roboto-Light';
}

.modal-body{
	border-bottom: 1px solid #ccc;
	.radio{
		display: inline-block;
		margin-right: 15px;
		label{
			padding-left: 35px;
			span{
				top: 6px;
			}
		}
	}
}
.modal-footer{
	padding: 20px!important;
}

input.input-number{
	position: absolute;
	text-align: right;
	right: 0px;
	margin-top: -45px;
	float: right;
	background: none;
	border: none;
	padding: 0;
}

#demo{
	padding-top: 30px;
}

.display{
	margin-bottom: 30px;
	min-height: 35%;
	img{
		margin: auto;
		position: relative;
		width: 100%;
		height: 300px;
		background-color: #555;
	}

	img#originalPic {
		display: none;
		position: absolute;
		z-index: 1;
		height: auto;
		width: calc(~"100% - 29.5px");
	}

#BeforeAfterSlider {
	display: none;
}

#BeforeAfterSlider .noUi-base {
    background: #cccccc;
}
#BeforeAfterSlider .noUi-origin {
    background: #cccccc;
}
#BeforeAfterSlider .noUi-background {
	background: #cccccc;
}
#BeforeAfterSlider .noUi-connect {
	background: #cccccc;
}
#BeforeAfterSlider .noUi-handle {
	background: #eee;
	::after {
		content: "After";
	}
}

	#viewer-placeholder{
		height: 300px;
		width: 100%;
		position: absolute;
		top: 0;
		left: 0;
		// background: blue;
		margin-top: 80px;
		text-align: center;
		h2{
			text-align: center;
			color: #f6F6F6;
			line-height: 250px;
			font-family: 'Roboto-Light';
		}
	}
}

#preview-render.panel{
	cursor: pointer;
	transition: all 0.2s ease-in-out;
	&:hover{
		transform : scale(1.05);
		transition: all 0.2s ease-in-out;
		box-shadow: 0 3px 6px rgba(0, 0, 0, 0.02), 0 3px 6px rgba(0, 0, 0, 0.02);
	}
}

.preview-render{
	cursor: pointer;
	transition: all 0.2s ease-in-out;
	&:hover{
		transform : scale(1.05);
		transition: all 0.2s ease-in-out;
	}
}

.sampleImage{
	width: 100%;
}

.graph{
	margin-top: 30px;
	margin-bottom: 30px;
	margin: auto;
	text-align: center;
	vertical-align: middle;
	height: 50vh;
	border: 1px solid #ddd;
	box-shadow: 0 1px 6px rgba(0, 0, 0, 0.12), 0 1px 6px rgba(0, 0, 0, 0.12);
	.node{
		width: 120px;
		height: 50px;
		text-align: center;
		padding-top: 8px;
		color:#fff;
		background-color:@ofxColor2;
		border-radius: 8px;
		display: inline-block;
		margin-top: 10vh;
	}
}

.changeParameters{
	min-height: 50%;
}

.changeParameters-title{
	h3{
		display: inline-block;
		margin: 0;
		font-size: 1em;
		line-height: 60px;
		padding-left: 30px;
		// font-family: "Roboto-Light";
		border-left: 1px solid #ddd;
		border-bottom: 1px solid #ddd;	
	}
	#reset{
		margin-left: 30px;
		font-size: 1.5em;
		color: @ofxColor2;
		&:hover{
			color: @grey;
		}
	}
}

.changeParameters-content{
	margin: 0;
	font-size: 1em;
	min-height: 400px;
	padding-left: 30px;
	padding-top: 20px;
	padding-bottom: 20px;
	border-left: 1px solid #ddd;
	label{
		margin: 0;
		padding: 0;
	}
	form{
		margin: 0;
	}
	.form-group{
		.control-label{
			font-family: "Roboto";
		}
		.checkbox{
			margin-left: 10px;
			display: inline-block;
			span.ripple{
				left: -15px;
			}
		}
		.togglebutton{
			margin: 0;
			margin-left: 10px;
			display: inline-block;
		}
		.radio{
			margin: 0;
			label{
				margin: 0;
				left: 0;
				margin-left: 30px;
				span{
					margin: 0;
					left: -30px;
				}
			}
			&:first-of-type{
				padding-top: 7px;
			}
		}
	}
}

.changeParameters-result{
	padding-top: 20px;
	padding-bottom: 10px;
	border-top: 1px solid #ddd;
	border-left: 1px solid #ddd;
	.submit-form{
		text-align: center;
	}
}


.demo-links{
	border-bottom: 1px solid #ddd;
	margin-bottom: 30px;
	&:before{
		content: "";
		position: absolute;
		background: #ddd;
		margin-top: 60px;
		margin-left: 200px;
		height: 1px;
		width: 100%;
	}
	h3{
		margin: 0;
		font-size: 1em;
		line-height: 60px;
		display: inline-block;
		// font-family: "Roboto-Light";
		// border-bottom: 1px solid #ccc;
	}
	input, button{
		display: inline-block;
		float: right;
	}
	a{
		display: inline-block;
		float: right;
		font-size: 1.5em;
		margin: 15px 30px 0 0 ;
		/*color: @ofxColor2;*/
		&:hover, &.disabled{
			color: @grey;
		}
	}
	.preloader-wrapper {
        display: inline-block;
        float: right;
        margin: 16px 10px;
    }
}

/*****************************/
/*  STYLES FOR THE SPINNER   */
/* taken from materializecss */
/*****************************/
/*
 * Constants:
 *      STROKEWIDTH = 3px
 *      ARCSIZE     = 270 degrees (amount of circle the arc takes up)
 *      ARCTIME     = 1333ms (time it takes to expand and contract arc)
 *      ARCSTARTROT = 216 degrees (how much the start location of the arc
 *                                should rotate each time, 216 gives us a
 *                                5 pointed star shape (it's 360/5 * 3).
 *                                For a 7 pointed star, we might do
 *                                360/7 * 3 = 154.286)
 *      CONTAINERWIDTH = 28px
 *      SHRINK_TIME = 400ms
 */
.preloader-wrapper {
  	display: inline-block;
  	position: relative;
  	z-index: 1;
  	top: 50%;
  	width: 48px;
  	height: 48px;
	&.extra-small {
    	width: 24px;
    	height: 24px;
	}
  	&.small {
    	width: 36px;
    	height: 36px; 
	}
  	&.big {
    	width: 64px;
    	height: 64px; 
    }
  	&.active {
    	/* duration: 360 * ARCTIME / (ARCSTARTROT + (360-ARCSIZE)) */
    	-webkit-animation: container-rotate 1568ms linear infinite;
    	animation: container-rotate 1568ms linear infinite; 
	}
}

@keyframes container-rotate {
  to {
    transform: rotate(360deg); } 
}

.spinner-layer {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0; 
  border-color: @ofxColor;
}

/**
 * IMPORTANT NOTE ABOUT CSS ANIMATION PROPERTIES (keanulee):
 *
 * iOS Safari (tested on iOS 8.1) does not handle animation-delay very well - it doesn't
 * guarantee that the animation will start _exactly_ after that value. So we avoid using
 * animation-delay and instead set custom keyframes for each color (as redundant as it
 * seems).
 *
 * We write out each animation in full (instead of separating animation-name,
 * animation-duration, etc.) because under the polyfill, Safari does not recognize those
 * specific properties properly, treats them as -webkit-animation, and overrides the
 * other animation rules. See https://github.com/Polymer/platform/issues/53.
 */
.active .spinner-layer {
  /* durations: 4 * ARCTIME */
  opacity: 1;
  animation: fill-unfill-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;
}

@keyframes fill-unfill-rotate {
  /* 0.5 * ARCSIZE */
  /* 1   * ARCSIZE */
  /* 1.5 * ARCSIZE */
  /* 2   * ARCSIZE */
  /* 2.5 * ARCSIZE */
  /* 3   * ARCSIZE */
  /* 3.5 * ARCSIZE */
  /* 4   * ARCSIZE */
  12.5% {
    transform: rotate(135deg); }

  25% {
    transform: rotate(270deg); }

  37.5% {
    transform: rotate(405deg); }

  50% {
    transform: rotate(540deg); }

  62.5% {
    transform: rotate(675deg); }

  75% {
    transform: rotate(810deg); }

  87.5% {
    transform: rotate(945deg); }

  to {
    transform: rotate(1080deg); } }

@keyframes fade-in-out {
  from {
    opacity: 1; }

  25% {
    opacity: 1; }

  26% {
    opacity: 0; }

  89% {
    opacity: 0; }

  90% {
    opacity: 1; }

  100% {
    opacity: 1; } 
}
/**
 * Patch the gap that appear between the two adjacent div.circle-clipper while the
 * spinner is rotating (appears on Chrome 38, Safari 7.1, and IE 11).
 */
.gap-patch {
  position: absolute;
  box-sizing: border-box;
  top: 0;
  left: 45%;
  width: 10%;
  height: 100%;
  overflow: hidden;
  border-color: inherit; 
}

.gap-patch .circle {
  width: 1000%;
  left: -450%; 
}

.circle-clipper {
  	display: inline-block;
	position: relative;
  	width: 50%;
  	height: 100%;
  	overflow: hidden;
  	border-color: inherit;
  	.circle {
    	width: 200%;
	    box-sizing: border-box;
	    height: 100%;
	    border-width: 3px;
	    /* STROKEWIDTH */
	    border-style: solid;
	    border-color: inherit;
	    border-bottom-color: transparent !important;
	    border-radius: 50%;
	    -webkit-animation: none;
	    animation: none;
	    position: absolute;
	    top: 0;
	    right: 0;
	    bottom: 0; 
	}
  	&.left .circle {
    	left: 0;
    	border-right-color: transparent !important;
    	-webkit-transform: rotate(129deg);
    	transform: rotate(129deg);
    }
  	&.right .circle {
    	left: -100%;
    	border-left-color: transparent !important;
    	-webkit-transform: rotate(-129deg);
    	transform: rotate(-129deg);
    }
}

.active .circle-clipper.left .circle {
  /* duration: ARCTIME */
  animation: left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both; 
}

.active .circle-clipper.right .circle {
  /* duration: ARCTIME */
  animation: right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both; 
}

@keyframes left-spin {
  from {
    transform: rotate(130deg); }

  50% {
    transform: rotate(-5deg); }

  to {
    transform: rotate(130deg); }
}

@keyframes right-spin {
  from {
    transform: rotate(-130deg); }

  50% {
    transform: rotate(5deg); }

  to {
    transform: rotate(-130deg); } 
}

#renderUrl {
	float: right;
	margin-top: 0px;
}
